{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"h1\", null, \"News Feed\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.news, item => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: item.title\n    }, _toDisplayString(item.title), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_Fragment","_renderList","$data","news","item","key","title"],"sources":["/home/bing/Git/quantum_news/quantum-news/src/App.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>News Feed</h1>\n    <ul>\n      <li v-for=\"item in news\" :key=\"item.title\">{{ item.title }}</li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport Parser from 'rss-parser';\n\nexport default {\n  data() {\n    return {\n      news: [],\n    };\n  },\n  methods: {\n    async fetchNews() {\n      const rssUrl = 'https://news.google.com/rss'; // Replace with your RSS feed URL\n      const encodedRssUrl = encodeURIComponent(rssUrl);\n\n      const fetchUrl = `/api/rss?url=${encodeURIComponent('https://news.google.com/rss')}`;\n      fetch(fetchUrl)\n        .then(response => response.text())\n        .then(xml => console.log(xml));\n\n      try {\n        const response = await fetch(fetchUrl);\n        const xml = await response.text();\n        console.log(xml);\n        const parser = new Parser();\n        const feed = await parser.parseString(xml);\n        this.news = feed.items;\n      } catch (error) {\n        console.error('Error fetching news:', error);\n      }\n    },\n  },\n  mounted() {\n    this.fetchNews();\n  },\n};\n</script>"],"mappings":";;uBACEA,mBAAA,CAKM,c,0BAJJC,mBAAA,CAAkB,YAAd,WAAS,sBACbA,mBAAA,CAEK,c,kBADHD,mBAAA,CAAgEE,SAAA,QAAAC,WAAA,CAA7CC,KAAA,CAAAC,IAAI,EAAZC,IAAI;yBAAfN,mBAAA,CAAgE;MAAtCO,GAAG,EAAED,IAAI,CAACE;wBAAUF,IAAI,CAACE,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}